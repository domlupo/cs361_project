SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS UserLevels;
CREATE TABLE UserLevels(
	userLevelID INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    role VARCHAR(50) NOT NULL,
    createdAt DATETIME NOT NULL,
    updatedAt DATETIME NOT NULL,
    UNIQUE (role)
);

DROP TABLE IF EXISTS Users;
CREATE TABLE Users(
	userID INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    userLevelID INT NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstName VARCHAR(50) NOT NULL,
    lastName VARCHAR(50) NOT NULL,
    createdAt DATETIME NOT NULL,
    updatedAt DATETIME NOT NULL,
    CONSTRAINT FOREIGN KEY (userLevelID) REFERENCES UserLevels(userLevelID),
    UNIQUE (email)
);

DROP TABLE IF EXISTS Products;
CREATE TABLE Products(
	productID INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    code VARCHAR(10) NOT NULL,
    name VARCHAR(50) NOT NULL,
    descript VARCHAR(255),
    price DECIMAL(8, 2) NOT NULL,
    expirable TINYINT NOT NULL DEFAULT 0,
    createdAt DATETIME NOT NULL,
    updatedAt DATETIME NOT NULL,
    unique (code),
    inventoryCount INT NOT NULL,
    shelfCount INT NOT NULL
);

DROP TABLE IF EXISTS Transactions;
CREATE TABLE Transactions(
	transactionID INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    userID INT NOT NULL,
    productID INT NOT NULL,
    date DATETIME NOT NULL,
    productQty INT NOT NULL,
    startLoc VARCHAR(10) NOT NULL,
    endLoc VARCHAR(10) NOT NULL,
    createdAt DATETIME NOT NULL,
    updatedAt DATETIME NOT NULL,
    CONSTRAINT FOREIGN KEY (userID) REFERENCES Users(userID),
    CONSTRAINT FOREIGN KEY (productID) REFERENCES Products(productID)
);

SET FOREIGN_KEY_CHECKS=1;
